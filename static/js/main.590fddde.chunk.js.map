{"version":3,"sources":["components/Carousel.js","components/CarouselTypes.js","components/CarouselSetting.js","App.js","index.js"],"names":["Carousel","PropTypes","arrayOf","string","isRequired","number","bool","handleMoveImages","event","step","itemWidth","animationDuration","infinite","indexFrame","move","listImages","target","closest","children","position","index","forEach","image","style","transition","transform","props","setNewIndex","this","images","frameSize","className","width","type","onClick","map","key","uuid","src","alt","React","Component","defaultProps","CarouselSetting","state","setState","validUrl","str","test","handleAddImages","newImage","parentNode","previousSibling","value","updateImages","handleGetValue","item","Number","handleChecked","placeholder","onFocus","name","min","max","length","onChange","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.590fddde.chunk.js","sourcesContent":["/* eslint-disable no-param-reassign */\n/* eslint-disable jsx-a11y/alt-text */\nimport React from 'react';\nimport uuid from 'uuid-random';\nimport { CarouselTypes, CarouselDefault } from './CarouselTypes';\n\nimport './Carousel.scss';\n\nclass Carousel extends React.Component {\n  handleMoveImages = (\n    event,\n    step,\n    itemWidth,\n    animationDuration,\n    infinite,\n    indexFrame,\n    move,\n  ) => {\n    const listImages = event.target.closest('.Carousel')\n      .children[1].children[0].children;\n    let position = 0;\n    const index = move === 'next' ? indexFrame + 1 : indexFrame - 1;\n\n    [...listImages].forEach((image) => {\n      position = itemWidth * step;\n      image.style.transition = `transform ${animationDuration}ms`;\n      image.style.transform = `translateX(-${position * index}px)`;\n    });\n    this.props.setNewIndex(index);\n  }\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n      indexFrame,\n    } = this.props;\n\n    return (\n      <div\n        className=\"Carousel\"\n        style={\n          {\n            width: frameSize * itemWidth,\n          }\n        }\n      >\n        <button\n          type=\"button\"\n          className=\"prev\"\n          onClick={event => this.handleMoveImages(\n            event,\n            step,\n            itemWidth,\n            animationDuration,\n            infinite,\n            indexFrame,\n            'prev',\n          )}\n        >\n          ⇦\n        </button>\n        <div\n          className=\"container\"\n        >\n          <ul className=\"Carousel__list\">\n            {images.map((image, index) => (\n              // eslint-disable-next-line react/no-array-index-key\n              <li key={uuid()}><img src={image} alt={index + 1} /></li>\n            ))}\n          </ul>\n        </div>\n        <button\n          type=\"button\"\n          className=\"next\"\n          onClick={event => this.handleMoveImages(\n            event,\n            step,\n            itemWidth,\n            animationDuration,\n            infinite,\n            indexFrame,\n            'next',\n          )}\n        >\n          ⇨\n        </button>\n      </div>\n    );\n  }\n}\n\nCarousel.propTypes = CarouselTypes;\n\nCarousel.defaultProps = CarouselDefault;\n\nexport default Carousel;\n","import PropTypes from 'prop-types';\n\nexport const CarouselTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.string.isRequired,\n  ).isRequired,\n  step: PropTypes.number,\n  frameSize: PropTypes.number,\n  itemWidth: PropTypes.number,\n  animationDuration: PropTypes.number,\n  infinite: PropTypes.bool,\n  indexFrame: PropTypes.number,\n};\n\nexport const CarouselDefault = {\n  step: 3,\n  frameSize: 3,\n  itemWidth: 130,\n  animationDuration: 1000,\n  infinite: false,\n  indexFrame: 0,\n};\n","/* eslint-disable no-param-reassign */\nimport React from 'react';\n\nimport Carousel from './Carousel';\nimport './CarouselSetting.scss';\n\nexport class CarouselSetting extends React.Component {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n    indexFrame: 0,\n  };\n\n  setNewIndex = (index) => {\n    this.setState({\n      indexFrame: index,\n    });\n  }\n\n  validUrl = (str) => {\n    // eslint-disable-next-line max-len\n    const regexp = /^(?:(?:https?|ftp):\\/\\/)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:\\/\\S*)?$/;\n\n    if (regexp.test(str)) {\n      return true;\n    }\n\n    return false;\n  }\n\n  handleAddImages = (event) => {\n    const newImage = event.target.parentNode.previousSibling.children[0];\n\n    if (this.validUrl(newImage.value)) {\n      const updateImages = [...this.state.images, newImage.value];\n\n      this.setState({\n        images: [...updateImages],\n      });\n    }\n\n    this.validUrl(newImage.value)\n      ? newImage.className = ''\n      : newImage.className = 'not-valid-url';\n  }\n\n  handleGetValue = (event, item) => {\n    this.setState({\n      [item]: Number(event.target.value),\n    });\n  }\n\n  handleChecked = (event) => {\n    this.setState({\n      infinite: !!event.target.value,\n    });\n  }\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n      indexFrame,\n    } = this.state;\n\n    return (\n      <>\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n          indexFrame={indexFrame}\n          setNewIndex={this.setNewIndex}\n        />\n\n        <div className=\"CarouselSetting\">\n          <form>\n            <table>\n              <tbody>\n                <tr>\n                  <td>\n                    Image\n                  </td>\n                  <td>\n                    <input\n                      type=\"text\"\n                      placeholder=\"image\"\n                      // eslint-disable-next-line no-return-assign\n                      onFocus={event => event.target.value = ''}\n                    />\n                  </td>\n                  <td>\n                    <input\n                      type=\"button\"\n                      value=\"+\"\n                      onClick={this.handleAddImages}\n                    />\n                  </td>\n                </tr>\n                <tr>\n                  <td>Step</td>\n                  <td>\n                    <input\n                      name=\"step\"\n                      type=\"range\"\n                      value={step}\n                      step=\"1\"\n                      min=\"1\"\n                      max={images.length}\n                      onChange={event => this.handleGetValue(event, 'step')}\n                    />\n                  </td>\n                </tr>\n                <tr>\n                  <td>Frame size</td>\n                  <td>\n                    <input\n                      name=\"frameSize\"\n                      type=\"range\"\n                      value={frameSize}\n                      min=\"1\"\n                      max=\"9\"\n                      onChange={\n                        event => this.handleGetValue(event, 'frameSize')\n                      }\n                    />\n                  </td>\n                </tr>\n                <tr>\n                  <td>Item width</td>\n                  <td>\n                    <input\n                      name=\"width\"\n                      type=\"range\"\n                      value={itemWidth}\n                      min=\"130\"\n                      max=\"260\"\n                      step=\"130\"\n                      onChange={\n                        event => this.handleGetValue(event, 'itemWidth')\n                      }\n                    />\n                  </td>\n                </tr>\n                <tr>\n                  <td>Animation duration</td>\n                  <td>\n                    <input\n                      name=\"animation\"\n                      type=\"range\"\n                      min=\"100\"\n                      max=\"2000\"\n                      step=\"100\"\n                      value={animationDuration}\n                      onChange={\n                        event => this.handleGetValue(event, 'animationDuration')\n                      }\n                    />\n                  </td>\n                </tr>\n                <tr>\n                  <td>Infinite</td>\n                  <td>\n                    <label>\n                      <input\n                        type=\"checkbox\"\n                        value=\"false\"\n                        onClick={this.handleChecked}\n                      />\n                      True\n                    </label>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </form>\n        </div>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\n\nimport { CarouselSetting } from './components/CarouselSetting';\n\nconst App = () => (\n  <div className=\"App\">\n    {/* eslint-disable-next-line */}\n    <h1>Gallary</h1>\n\n    <CarouselSetting />\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}
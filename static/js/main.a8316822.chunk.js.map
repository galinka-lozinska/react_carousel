{"version":3,"sources":["components/CarouselTypes.js","components/Carousel.js","components/CarouselSetting.js","App.js","index.js"],"names":["CarouselDefault","PropTypes","arrayOf","string","isRequired","number","bool","step","frameSize","itemWidth","animationDuration","infinite","indexFrame","Carousel","showNextImages","props","images","currentPosition","handleGetValue","index","length","position","Math","min","showPrevImages","floor","max","handleMoveImages","event","action","this","className","style","width","height","type","onClick","transition","transform","map","image","key","uuid","src","alt","React","Component","defaultProps","CarouselSetting","validUrl","str","test","handleAddImages","newImage","target","previousSibling","value","updateImages","htmlFor","id","placeholder","onChange","checked","App","state","item","setState","Number","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a8316822.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nexport const CarouselTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.string.isRequired,\n  ).isRequired,\n  step: PropTypes.number,\n  frameSize: PropTypes.number,\n  itemWidth: PropTypes.number,\n  animationDuration: PropTypes.number,\n  infinite: PropTypes.bool,\n  indexFrame: PropTypes.number,\n};\n\nexport const CarouselDefault = {\n  step: 3,\n  frameSize: 3,\n  itemWidth: 130,\n  animationDuration: 1000,\n  infinite: false,\n  indexFrame: 0,\n};\n","import React from 'react';\nimport uuid from 'uuid-random';\nimport { CarouselTypes, CarouselDefault } from './CarouselTypes';\n\nimport './Carousel.scss';\n\nexport class Carousel extends React.Component {\n  showNextImages = () => {\n    const {\n      step,\n      frameSize,\n      itemWidth,\n      indexFrame,\n      infinite,\n      images,\n      currentPosition,\n      handleGetValue,\n    } = this.props;\n    const index = currentPosition === itemWidth * (images.length - frameSize)\n      ? indexFrame : indexFrame + 1;\n    let position = itemWidth * step * index;\n\n    handleGetValue(index, 'indexFrame');\n\n    if (infinite && currentPosition\n      === itemWidth * (images.length - frameSize)) {\n      position = 0;\n      handleGetValue(0, 'indexFrame');\n    }\n\n    return Math.min(\n      position,\n      itemWidth * (images.length - frameSize),\n    );\n  }\n\n  showPrevImages = () => {\n    const {\n      images,\n      step,\n      itemWidth,\n      indexFrame,\n      infinite,\n      frameSize,\n      currentPosition,\n      handleGetValue,\n    } = this.props;\n    const index = currentPosition === 0 ? indexFrame : indexFrame - 1;\n    let position = itemWidth * step * index;\n\n    if (infinite && currentPosition === 0) {\n      position = itemWidth * ([...images].length - frameSize);\n      handleGetValue(Math.floor([...images].length / frameSize), 'indexFrame');\n    } else {\n      handleGetValue(index, 'indexFrame');\n    }\n\n    return Math.max(\n      0,\n      position,\n    );\n  }\n\n  handleMoveImages = (\n    event,\n    action,\n  ) => {\n    const {\n      handleGetValue,\n    } = this.props;\n\n    switch (action) {\n      case 'next':\n        handleGetValue(this.showNextImages(), 'currentPosition');\n        break;\n      case 'prev':\n        handleGetValue(this.showPrevImages(), 'currentPosition');\n        break;\n      default:\n        break;\n    }\n  }\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      currentPosition,\n      animationDuration,\n    } = this.props;\n\n    return (\n      <div\n        className=\"Carousel\"\n        style={{\n          width: itemWidth * frameSize,\n          height: itemWidth,\n        }}\n      >\n        <button\n          className=\"prev\"\n          type=\"button\"\n          onClick={event => this.handleMoveImages(event, 'prev')}\n        >\n          {'<'}\n        </button>\n        <div\n          className=\"Carousel_gallery\"\n          style={{\n            width: itemWidth * frameSize,\n            height: itemWidth,\n          }}\n        >\n          <ul\n            className=\"Carousel__list\"\n            style={{\n              transition: `transform ${animationDuration}ms ease`,\n              transform: `translateX(-${currentPosition}px)`,\n            }}\n          >\n            {[...images].map((image, index) => (\n              <li key={uuid()}>\n                <img\n                  src={image}\n                  alt={index + 1}\n                  style={{\n                    width: itemWidth,\n                    height: itemWidth,\n                  }}\n                />\n              </li>\n            ))}\n          </ul>\n        </div>\n        <button\n          className=\"next\"\n          type=\"button\"\n          onClick={event => this.handleMoveImages(event, 'next')}\n        >\n          {'>'}\n        </button>\n      </div>\n    );\n  }\n}\n\nCarousel.propTypes = CarouselTypes;\nCarousel.defaultProps = CarouselDefault;\n","/* eslint-disable no-return-assign */\nimport React from 'react';\nimport { CarouselTypes, CarouselDefault } from './CarouselTypes';\n\nimport './CarouselSetting.scss';\n\nexport class CarouselSetting extends React.Component {\n  validUrl = (str) => {\n    // eslint-disable-next-line max-len\n    const regexp = /^(?:(?:https?|ftp):\\/\\/)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:\\/\\S*)?$/;\n\n    if (regexp.test(str)) {\n      return true;\n    }\n\n    return false;\n  }\n\n  handleAddImages = (event) => {\n    const newImage = event.target.previousSibling;\n\n    if (this.validUrl(newImage.value)) {\n      const updateImages = [...this.props.images, newImage.value];\n\n      this.props.handleGetValue(updateImages, 'images');\n    }\n\n    this.validUrl(newImage.value)\n      ? newImage.className = 'add-image'\n      : newImage.className = 'add-image invalid';\n    newImage.value = '';\n  }\n\n  render() {\n    const {\n      images,\n      frameSize,\n      step,\n      itemWidth,\n      animationDuration,\n      indexFrame,\n      handleGetValue,\n    } = this.props;\n\n    return (\n      <div className=\"CarouselSetting\">\n        <form>\n          <label htmlFor=\"image\">Image</label>\n          <div className=\"range\">\n            <input\n              className=\"add-image\"\n              type=\"text\"\n              id=\"image\"\n              placeholder=\"Input image src...\"\n            />\n            <input\n              className=\"add-image\"\n              type=\"button\"\n              value=\"+\"\n              id=\"image\"\n              onClick={event => this.handleAddImages(event)}\n            />\n          </div>\n\n          <label htmlFor=\"step\">Step</label>\n          <div className=\"range\">\n            <input\n              type=\"range\"\n              id=\"step\"\n              min=\"1\"\n              max=\"5\"\n              step=\"1\"\n              value={step}\n              onChange={\n                (event) => {\n                  handleGetValue(event.target.value, 'step');\n                  if (event.target.value > frameSize) {\n                    handleGetValue(\n                      event.target.value,\n                      'frameSize',\n                    );\n                  }\n                }\n              }\n            />\n          </div>\n\n          <label htmlFor=\"frameSize\">Frame Size</label>\n          <div className=\"range\">\n            <input\n              type=\"range\"\n              id=\"frameSize\"\n              min=\"1\"\n              max=\"5\"\n              step=\"1\"\n              value={frameSize}\n              onChange={\n                (event) => {\n                  handleGetValue(\n                    event.target.value,\n                    'frameSize',\n                  );\n\n                  if (event.target.value < step) {\n                    handleGetValue(\n                      event.target.value,\n                      'step',\n                    );\n                  }\n                }\n              }\n            />\n          </div>\n\n          <label htmlFor=\"itemWidth\">Item Width</label>\n          <div className=\"range\">\n            <input\n              type=\"range\"\n              id=\"itemWidth\"\n              min=\"100\"\n              max=\"260\"\n              step=\"10\"\n              value={itemWidth}\n              onChange={\n                (event) => {\n                  handleGetValue(\n                    event.target.value,\n                    'itemWidth',\n                  );\n                  handleGetValue(\n                    Math.min(\n                      event.target.value * step * indexFrame,\n                      event.target.value * (images.length - frameSize),\n                    ),\n                    'currentPosition',\n                  );\n                }\n              }\n            />\n          </div>\n\n          <label htmlFor=\"animationDuration\">Animation Duration</label>\n          <div className=\"range\">\n            <input\n              type=\"range\"\n              id=\"animationDuration\"\n              min=\"100\"\n              max=\"1500\"\n              step=\"100\"\n              value={animationDuration}\n              onChange={\n                event => handleGetValue(\n                  event.target.value,\n                  'animationDuration',\n                )\n              }\n            />\n          </div>\n\n          <label htmlFor=\"infinite\">Infinite</label>\n          <div className=\"range\">\n            <label>\n              <input\n                type=\"checkbox\"\n                id=\"infinite\"\n                onChange={\n                  event => handleGetValue(\n                    event.target.checked,\n                    'infinite',\n                  )}\n              />\n              True\n            </label>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nCarouselSetting.propTypes = CarouselTypes;\nCarouselSetting.defaultProps = CarouselDefault;\n","import React from 'react';\nimport './App.scss';\n\nimport { Carousel } from './components/Carousel';\nimport { CarouselSetting } from './components/CarouselSetting';\n\nclass App extends React.Component {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n    indexFrame: 0,\n    currentPosition: 0,\n  };\n\n  handleGetValue = (value, item) => {\n    item === 'images'\n      ? this.setState({\n        images: [...value],\n      })\n      : this.setState({\n        [item]: typeof value === 'string' || typeof value === 'number'\n          ? Number(value) : !!value,\n      });\n  }\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n      indexFrame,\n      currentPosition,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>Carousel</h1>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n          indexFrame={indexFrame}\n          currentPosition={currentPosition}\n          handleGetValue={this.handleGetValue}\n        />\n\n        <CarouselSetting\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n          indexFrame={indexFrame}\n          currentPosition={currentPosition}\n          handleGetValue={this.handleGetValue}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}